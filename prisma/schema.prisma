generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  role      Int      @default(1)
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]

  @@map("users")
}

model Color {
  id          String       @id @default(uuid())
  name        String
  productSkus ProductSku[]

  @@map("colors")
}

model Size {
  id          String       @id @default(uuid())
  name        String
  productSkus ProductSku[]

  @@map("sizes")
}

model Product {
  id              String       @id @default(uuid())
  image           String
  name            String
  description     String
  longDescription String?
  productSkus     ProductSku[]

  @@map("products")
}

model ProductSku {
  id                 String         @id @default(uuid())
  imageSku           String?
  price              Float
  discountPrice      Float?
  discountPercentage Float?
  newProduct         Boolean?       @default(false)
  sku                String         @unique
  product            Product        @relation(fields: [productId], references: [id])
  productId          String
  color              Color          @relation(fields: [colorId], references: [id])
  colorId            String
  sizeId             String
  size               Size           @relation(fields: [sizeId], references: [id])
  quantity           Int
  orderProduct       OrderProduct[]

  @@map("product_skus")
}

model Order {
  id             String         @id @default(uuid())
  name           String
  lastName       String
  email          String
  zipCode        String
  address        String
  region         String
  town           String
  province       String
  total          Int
  payment        String
  orderProducts  OrderProduct[]
  addOnAddress   String?
  addInformation String?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  userId         String?
  user           User ?          @relation(fields: [userId], references: [id])

  @@map("orders")
}

model OrderProduct {
  id        String     @id @default(uuid())
  productId String
  quantity  Int
  orderId   String
  product   ProductSku @relation(fields: [productId], references: [id])
  order     Order      @relation(fields: [orderId], references: [id])

  @@map("order_products")
}
